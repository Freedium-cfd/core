{"data": {"post": {"__typename": "Post", "id": "c88ac63903f5", "readingTime": 3.618867924528302, "creator": {"__typename": "User", "id": "fcadb85a9bcd", "imageId": "1*nH63d3HiTnSVVgVcdoL8-g.jpeg", "username": "cameronjosephjones", "name": "Cameron Jones", "bio": "Data Analyst @ HelloFresh: https://www.linkedin.com/in/cameronjones08/", "tippingLink": null, "viewerEdge": {"isUser": false, "isFollowing": false, "isBlocking": false, "isMuting": false}, "socialStats": {"followingCount": 4, "followerCount": 46}, "newsletterV3": {"__typename": "NewsletterV3", "id": "7206330f6028", "viewerEdge": {"id": "newsletterId:7206330f6028-viewerId:lo_79b206e87b54", "isSubscribed": false}}, "isFollowing": null, "mediumMemberAt": 1684852405000, "twitterScreenName": "Cameronjoejones"}, "collection": null, "isLocked": false, "firstPublishedAt": 1683379352640, "latestPublishedVersion": "9ffb82d1b0d8", "title": "Building a KPI dashboard in Streamlit using Python", "visibility": "PUBLIC", "postResponses": {"count": 0}, "clapCount": 107, "viewerEdge": {"clapCount": 0}, "detectedLanguage": "en", "mediumUrl": "https://medium.com/@cameronjosephjones/building-a-kpi-dashboard-in-streamlit-using-python-c88ac63903f5", "updatedAt": 1683379360126, "allowResponses": true, "isProxyPost": false, "isSeries": false, "previewImage": {"id": "1*8ASf5xmZQ3v6ckh_3tyWqQ.png"}, "inResponseToPostResult": null, "inResponseToMediaResource": null, "inResponseToEntityType": null, "canonicalUrl": "", "previewContent": {"subtitle": "A step-by-step guide to creating a data analyst portfolio project"}, "pinnedByCreatorAt": 0, "linkMetadataList": [{"url": "https://twitter.com/cameronjoejones", "alts": []}, {"url": "https://www.kaggle.com/datasets/kyanyoga/sample-sales-data", "alts": []}, {"url": "https://docs.streamlit.io/streamlit-community-cloud/get-started/deploy-an-app", "alts": []}, {"url": "https://cameronjoejones-streamlit-sales-dashboard-app-3pmk71.streamlit.app/", "alts": []}, {"url": "https://github.com/cameronjoejones/streamlit-sales-dashboard", "alts": []}], "highlights": [], "responsesLocked": false, "tags": [{"__typename": "Tag", "id": "python", "normalizedTagSlug": "python", "displayTitle": "Python", "followerCount": 775338, "postCount": 174679}, {"__typename": "Tag", "id": "streamlit", "normalizedTagSlug": "streamlit", "displayTitle": "Streamlit", "followerCount": 645, "postCount": 1575}, {"__typename": "Tag", "id": "portfolio", "normalizedTagSlug": "portfolio", "displayTitle": "Portfolio", "followerCount": 612, "postCount": 13175}, {"__typename": "Tag", "id": "data-science", "normalizedTagSlug": "data-science", "displayTitle": "Data Science", "followerCount": 2197918, "postCount": 249526}, {"__typename": "Tag", "id": "data-analysis", "normalizedTagSlug": "data-analysis", "displayTitle": "Data Analysis", "followerCount": 7271, "postCount": 35371}], "content": {"bodyModel": {"__typename": "RichText", "sections": [{"__typename": "Section", "name": "6851", "startIndex": 0, "textLayout": null, "imageLayout": null, "videoLayout": null, "backgroundImage": null, "backgroundVideo": null}], "paragraphs": [{"__typename": "Paragraph", "id": "9ffb82d1b0d8_0", "name": "27a3", "href": null, "text": "Building a KPI dashboard in Streamlit using Python", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H3", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_1", "name": "6ea3", "href": null, "text": "A step-by-step guide to creating a Python data analyst portfolio project", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_2", "name": "fb53", "href": null, "text": "Follow me on Twitter and check out the source code on GitHub", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "A", "start": 13, "end": 20, "href": "https://twitter.com/cameronjoejones", "title": "", "rel": "noopener ugc nofollow", "anchorType": "LINK", "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "A", "start": 54, "end": 60, "href": "https://github.com/cameronjoejones/streamlit-sales-dashboard", "title": "", "rel": "", "anchorType": "LINK", "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "EM", "start": 0, "end": 60, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_3", "name": "c6cb", "href": null, "text": "Sales KPIs dashboard", "iframe": null, "layout": "INSET_CENTER", "markups": [], "metadata": {"__typename": "ImageMetadata", "id": "1*8ASf5xmZQ3v6ckh_3tyWqQ.png", "originalWidth": 1917, "originalHeight": 910, "focusPercentX": null, "focusPercentY": null, "alt": null}, "mixtapeMetadata": null, "type": "IMG", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_4", "name": "0d1f", "href": null, "text": "Checkout the web app here: https://cameronjoejones-streamlit-sales-dashboard-app-3pmk71.streamlit.app/", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "A", "start": 27, "end": 102, "href": "https://cameronjoejones-streamlit-sales-dashboard-app-3pmk71.streamlit.app/", "title": "", "rel": "nofollow", "anchorType": "LINK", "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_5", "name": "153b", "href": null, "text": "In today\u2019s data-driven world, the ability to quickly and effectively analyse data is crucial. Data analysts need powerful tools that can help them gain insights from data and share their findings with others. In this tutorial, I\u2019ll walk you through the process of building an interactive sales dashboard using Streamlit, Pandas, and Plotly.", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_6", "name": "78dc", "href": null, "text": "Streamlit is an open-source Python library that enables you to build interactive web applications quickly and easily. Pandas is a popular data manipulation library, and Plotly is a library for creating interactive visualisations. Together, these libraries make it simple to create an engaging and informative dashboard.", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_7", "name": "5a9b", "href": null, "text": "Data for the project", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_8", "name": "8a46", "href": null, "text": "In this project, the data is from Kaggle \u2014 you can download the dataset from here: https://www.kaggle.com/datasets/kyanyoga/sample-sales-data or use your own dataset and rebuild the project yourself.", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "A", "start": 83, "end": 141, "href": "https://www.kaggle.com/datasets/kyanyoga/sample-sales-data", "title": "", "rel": "nofollow", "anchorType": "LINK", "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_9", "name": "b786", "href": null, "text": "Setting up your environment", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_10", "name": "d2c3", "href": null, "text": "To get started, install the required packages:", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_11", "name": "58fa", "href": null, "text": "pip install streamlit\npip install pandas\npip install plotly", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "bash", "mode": "EXPLICIT"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_12", "name": "c3b7", "href": null, "text": "I\u2019ll be using the following code to create our sales dashboard. In the sections below, I will explain each part of the code and how it contributes to the final product.", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_13", "name": "b3dd", "href": null, "text": "Code", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H3", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_14", "name": "0377", "href": null, "text": "Import libraries and set up the environment:", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_15", "name": "0357", "href": null, "text": "from typing import List, Tuple\n\nimport pandas as pd\nimport plotly.express as px\nimport streamlit as st", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "python", "mode": "AUTO"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_16", "name": "19b8", "href": null, "text": "This section imports the necessary libraries: pandas, plotly.express, and streamlit. Additionally, it imports List and Tuple from the typing module for type hinting.", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "CODE", "start": 46, "end": 52, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 54, "end": 68, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 74, "end": 83, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 110, "end": 114, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 119, "end": 124, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 134, "end": 140, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_17", "name": "ce30", "href": null, "text": "Set up the page configuration:", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_18", "name": "690f", "href": null, "text": "def set_page_config():\n    st.set_page_config(\n        page_title=\"Sales Dashboard\",\n        page_icon=\":bar_chart:\",\n        layout=\"wide\",\n        initial_sidebar_state=\"expanded\",\n    )\n    st.markdown(\"<style> footer {visibility: hidden;} </style>\", unsafe_allow_html=True)", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "python", "mode": "EXPLICIT"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_19", "name": "b2b2", "href": null, "text": "The set_page_config() function sets the page title, icon, layout, and initial sidebar state for the Streamlit app. It also hides the default footer using custom CSS.", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "CODE", "start": 4, "end": 21, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_20", "name": "5fe2", "href": null, "text": "Load and cache data", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_21", "name": "6345", "href": null, "text": "@st.cache_data\ndef load_data() -> pd.DataFrame:\n    data = pd.read_csv('data/sales_data_sample.csv', encoding='latin1')\n    data['ORDERDATE'] = pd.to_datetime(data['ORDERDATE'])\n    return data", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "python", "mode": "EXPLICIT"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_22", "name": "7bba", "href": null, "text": "The load_data() function reads a CSV file containing sales data and converts the ORDERDATE column to a datetime format. The @st.cache_data decorator caches the result of this function, ensuring that the data is only loaded once.", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "CODE", "start": 4, "end": 15, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 81, "end": 90, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 124, "end": 138, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_23", "name": "8f01", "href": null, "text": "Data filtering and KPI calculation:", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_24", "name": "eaba", "href": null, "text": "def filter_data(data: pd.DataFrame, column: str, values: List[str]) -> pd.DataFrame:\n    return data[data[column].isin(values)] if values else data\n\n\n@st.cache_data\ndef calculate_kpis(data: pd.DataFrame) -> List[float]:\n    total_sales = data['SALES'].sum()\n    sales_in_m = f\"{total_sales / 1000000:.2f}M\"\n    total_orders = data['ORDERNUMBER'].nunique()\n    average_sales_per_order = f\"{total_sales / total_orders / 1000:.2f}K\"\n    unique_customers = data['CUSTOMERNAME'].nunique()\n    return [sales_in_m, total_orders, average_sales_per_order, unique_customers]", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "python", "mode": "EXPLICIT"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_25", "name": "cb1c", "href": null, "text": "The filter_data() function filters a DataFrame based on the given column and list of values. The calculate_kpis() function calculates four key performance indicators (KPIs): total sales, total orders, average sales per order, and the number of unique customers.", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "CODE", "start": 4, "end": 17, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 97, "end": 113, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_26", "name": "548b", "href": null, "text": "Display KPI metrics:", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_27", "name": "79fa", "href": null, "text": "def display_kpi_metrics(kpis: List[float], kpi_names: List[str]):\n    st.header(\"KPI Metrics\")\n    for i, (col, (kpi_name, kpi_value)) in enumerate(zip(st.columns(4), zip(kpi_names, kpis))):\n        col.metric(label=kpi_name, value=kpi_value)", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "python", "mode": "EXPLICIT"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_28", "name": "f04d", "href": null, "text": "The display_kpi_metrics() function takes a list of KPIs and their corresponding names and displays them as metric cards in a row using Streamlit's st.metric() function.", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "CODE", "start": 4, "end": 25, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 147, "end": 158, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_29", "name": "8ab1", "href": null, "text": "Display the sidebar and filters:", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_30", "name": "a606", "href": null, "text": "def display_sidebar(data: pd.DataFrame) -> Tuple[List[str], List[str], List[str]]:\n    st.sidebar.header(\"Filters\")\n    start_date = pd.Timestamp(st.sidebar.date_input(\"Start date\", data['ORDERDATE'].min().date()))\n    end_date = pd.Timestamp(st.sidebar.date_input(\"End date\", data['ORDERDATE'].max().date()))\n\n    product_lines = sorted(data['PRODUCTLINE'].unique())\n    selected_product_lines = st.sidebar.multiselect(\"Product lines\", product_lines, product_lines)\n\n    selected_countries = st.sidebar.multiselect(\"Select Countries\", data['COUNTRY'].unique())\n\n    selected_statuses = st.sidebar.multiselect(\"Select Order Statuses\", data['STATUS'].unique())\n\n    return selected_product_lines, selected_countries, selected_statuses", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "python", "mode": "EXPLICIT"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_31", "name": "e575", "href": null, "text": "The display_sidebar() function creates a sidebar with various filters (date range, product lines, countries, order statuses).", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "CODE", "start": 4, "end": 21, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_32", "name": "bb1a", "href": null, "text": "Display charts and data tables:", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_33", "name": "3049", "href": null, "text": "def display_charts(data: pd.DataFrame):\n    combine_product_lines = st.checkbox(\"Combine Product Lines\", value=True)\n\n    if combine_product_lines:\n        fig = px.area(data, x='ORDERDATE', y='SALES',\n                      title=\"Sales by Product Line Over Time\", width=900, height=500)\n    else:\n        fig = px.area(data, x='ORDERDATE', y='SALES', color='PRODUCTLINE',\n                      title=\"Sales by Product Line Over Time\", width=900, height=500)\n\n    fig.update_layout(margin=dict(l=20, r=20, t=50, b=20))\n    fig.update_xaxes(rangemode='tozero', showgrid=False)\n    fig.update_yaxes(rangemode='tozero', showgrid=True)\n    st.plotly_chart(fig, use_container_width=True)\n\n    col1, col2, col3 = st.columns(3)\n\n    with col1:\n        st.subheader(\"Top 10 Customers\")\n        top_customers = data.groupby('CUSTOMERNAME')['SALES'].sum().reset_index().sort_values('SALES',\n                                                                                              ascending=False).head(10)\n        st.write(top_customers)\n\n    with col2:\n        st.subheader(\"Top 10 Products by Sales\")\n        top_products = data.groupby(['PRODUCTCODE', 'PRODUCTLINE'])['SALES'].sum().reset_index().sort_values('SALES',\n                                                                                                             ascending=False).head(\n            10)\n        st.write(top_products)\n\n    with col3:\n        st.subheader(\"Total Sales by Product Line\")\n        total_sales_by_product_line = data.groupby('PRODUCTLINE')['SALES'].sum().reset_index()\n        st.write(total_sales_by_product_line)", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "python", "mode": "EXPLICIT"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_34", "name": "cc32", "href": null, "text": "The display_charts() function creates and displays interactive charts and data tables using Plotly and Streamlit. It includes an area chart for sales by product line over time, a top 10 customers table, a top 10 products by sales table, and a total sales by product line table.", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "CODE", "start": 4, "end": 20, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_35", "name": "5f4c", "href": null, "text": "The main function:", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H4", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_36", "name": "f3ed", "href": null, "text": "def main():\n    set_page_config()\n\n    data = load_data()\n\n    st.title(\"\ud83d\udcca Sales Dashboard\")\n\n    selected_product_lines, selected_countries, selected_statuses = display_sidebar(data)\n\n    filtered_data = data.copy()\n    filtered_data = filter_data(filtered_data, 'PRODUCTLINE', selected_product_lines)\n    filtered_data = filter_data(filtered_data, 'COUNTRY', selected_countries)\n    filtered_data = filter_data(filtered_data, 'STATUS', selected_statuses)\n\n    kpis = calculate_kpis(filtered_data)\n    kpi_names = [\"Total Sales\", \"Total Orders\", \"Average Sales per Order\", \"Unique Customers\"]\n    display_kpi_metrics(kpis, kpi_names)\n\n    display_charts(filtered_data)\n\n\nif __name__ == '__main__':\n    main()", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "python", "mode": "EXPLICIT"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_37", "name": "ef78", "href": null, "text": "The main() function ties everything together. It sets up the page configuration, loads the data, and displays the title, sidebar, KPI metrics, and charts. The data is filtered based on the selected filters in the sidebar, and the KPIs are recalculated and displayed accordingly. The dashboard is executed by calling the main() function when the script is run.", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "CODE", "start": 4, "end": 10, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}, {"__typename": "Markup", "name": null, "type": "CODE", "start": 320, "end": 326, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_38", "name": "7dc8", "href": null, "text": "Testing the app/ running locally", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H3", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_39", "name": "5d95", "href": null, "text": "To run the app, save the code in a file named app.py, and then run the following command:", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "CODE", "start": 46, "end": 52, "href": null, "title": null, "rel": null, "anchorType": null, "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_40", "name": "4399", "href": null, "text": "streamlit run app.py", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "PRE", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": {"lang": "typescript", "mode": "AUTO"}}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_41", "name": "7e03", "href": null, "text": "Your app will open in a web browser and allow you to see the dashboard in a local environement.", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_42", "name": "41ab", "href": null, "text": "Deploying the App to the web", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "H3", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_43", "name": "02fe", "href": null, "text": "Simply follow Streamlit\u2019s simple documentation on how to deploy your app to the web https://docs.streamlit.io/streamlit-community-cloud/get-started/deploy-an-app", "iframe": null, "layout": null, "markups": [{"__typename": "Markup", "name": null, "type": "A", "start": 84, "end": 161, "href": "https://docs.streamlit.io/streamlit-community-cloud/get-started/deploy-an-app", "title": "", "rel": "noopener ugc nofollow", "anchorType": "LINK", "userId": null, "creatorIds": null}], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}, {"__typename": "Paragraph", "id": "9ffb82d1b0d8_44", "name": "53a2", "href": null, "text": "Happy coding!", "iframe": null, "layout": null, "markups": [], "metadata": null, "mixtapeMetadata": null, "type": "P", "hasDropCap": null, "dropCapImage": null, "codeBlockMetadata": null}]}, "validatedShareKey": ""}}, "meterPost": {"__typename": "MeteringInfo", "maxUnlockCount": 3, "unlocksRemaining": 0, "postIds": []}}}